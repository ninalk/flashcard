{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/PageHeader/PageHeader.jsx","components/SubjectCard/SubjectCard.jsx","components/SubjectFeed/SubjectFeed.jsx","components/Introduction/Introduction.jsx","utils/card-api.js","pages/HomePage/HomePage.jsx","components/RemoveCardButton/RemoveCardButton.jsx","components/EditCardButton/EditCardButton.jsx","components/FlashCard/FlashCard.jsx","components/ShuffleButton/ShuffleButton.jsx","components/Carousel/Carousel.jsx","pages/ProfilePage/ProfilePage.jsx","components/AddCardForm/AddCardForm.jsx","pages/FormPage/FormPage.jsx","pages/CardPage/CardPage.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","logout","login","creds","getUser","getProfile","username","SignUpPage","history","useHistory","useState","setError","email","password","passwordConf","state","setState","handleChange","e","target","name","value","a","preventDefault","userService","handleSignUpOrLogin","push","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","Form","autoComplete","onSubmit","Segment","Input","placeholder","onChange","required","type","Button","color","LoginPage","stacked","fluid","size","Message","to","PageHeader","handleLogout","clearing","floated","onClick","Icon","SubjectCard","category","Card","header","toUpperCase","SubjectFeed","cards","categories","Set","map","card","toLowerCase","Group","centered","index","Introduction","isHomePage","create","console","log","getAll","deleteOne","cardId","text","editCard","getCategory","HomePage","setCards","cardsAPI","data","useEffect","getCards","Row","RemoveCardButton","removeCard","React","open","setOpen","Modal","basic","onClose","onOpen","trigger","Content","Actions","inverted","_id","handleDeleteClick","EditCardButton","updateCard","question","answer","handleSubmit","formData","FormData","key","append","raised","TextArea","minHeight","FlashCard","isProfile","setAnswer","handleShowOrHideAnswer","prevCheck","Divider","Description","extra","ShuffleButton","shuffleCards","icon","circular","i","length","j","Math","floor","random","handleShuffleClick","CarouselItem","children","width","Carousel","activeIndex","setActiveIndex","updateIndex","newIndex","Children","count","handlers","useSwipeable","onSwipedLeft","onSwipedRight","transform","child","cloneElement","ProfilePage","profileUser","setProfileUser","setCard","loading","setLoading","location","useLocation","pathname","substring","err","Loader","active","AddCardForm","handleAddCard","FormPage","CardPage","getCardCategory","App","setUser","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5e644393.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username) {\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  })\n  .then(res => {\n    if(res.ok) return res.json();\n    throw new Error('Bad Credentials')\n  })\n}\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile\n};","import React, { useState } from 'react';\nimport './SignupPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Grid, Form, Segment, Header } from 'semantic-ui-react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function SignUpPage(props){\n    const history = useHistory();\n    const [error, setError] = useState('')\n    const [state, setState] = useState({\n        username: '',\n        email: '',\n        password:'',\n        passwordConf: ''\n    });\n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        });\n    }\n \n    async function handleSubmit(e){\n        e.preventDefault();\n        try {\n            await userService.signup(state);\n            props.handleSignUpOrLogin();\n            history.push('/');\n        } catch(err) {\n            setError(err.message)\n        }\n    }\n\n    return (\n        <>\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n              <Header as='h2' textAlign='center' className=\"signup-logo\">\n                  <span className='logo-text'> \n                      <span className='pink'>F</span>\n                      <span className='green'>L</span>\n                      <span className='yellow'>A</span>\n                      <span className='blue'>S</span>\n                      <span className='orange'>H</span>\n                      <span className='pink'>E</span>\n                      <span className='green'>D</span>\n                  </span>\n              </Header>        \n                <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\n                <Segment>               \n                    <Form.Input                    \n                      name=\"username\"\n                      placeholder=\"username\"\n                      value={state.username}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input\n                      type=\"email\"                  \n                      name=\"email\"\n                      placeholder=\"email\"\n                      value={state.email}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input             \n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"password\"\n                      value={state.password}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input     \n                      name=\"passwordConf\"\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      value={state.passwordConf}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Button\n                      color=\"olive\"\n                      type=\"submit\"\n                      className=\"btn\"\n                    //   disabled={invalidForm}\n                    >\n                    Signup\n                  </Button>\n                  </Segment>\n                  {error ? <ErrorMessage error={error} /> : null}\n                </Form>\n               \n            </Grid.Column>\n          </Grid>\n        </>\n      );   \n    \n}\n","import React, { useState } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport userService from '../../utils/userService';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\n\n\nexport default function LoginPage(props){\n    const history = useHistory();\n    const [error, setError] = useState('');\n    const [state, setState] = useState({\n        username: '',\n        password: ''\n    });\n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e){\n        e.preventDefault();\n\n        try {\n            await userService.login(state);\n            props.handleSignUpOrLogin();\n            history.push('/');\n        } catch(err){\n            setError(err.message);\n        }\n    }\n\n    return (\n        <>\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n                <Grid.Column style={{ maxWidth: 450 }} >\n                    <Form  autoComplete=\"off\" onSubmit={handleSubmit} >                        \n                        <Header as='h2' textAlign='center' className=\"signup-logo\">\n                            <span className='logo-text'> \n                                <span className='pink'>F</span>\n                                <span className='green'>L</span>\n                                <span className='yellow'>A</span>\n                                <span className='blue'>S</span>\n                                <span className='orange'>H</span>\n                                <span className='pink'>E</span>\n                                <span className='green'>D</span>\n                            </span>\n                        </Header>\n                        <Segment stacked>\n                            <Form.Input\n                            type=\"username\"                           \n                            name=\"username\"\n                            placeholder=\"username\"\n                            value={state.username}\n                            onChange={handleChange}\n                            required\n                            />\n                            <Form.Input\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"password\"\n                            value={state.password}\n                            onChange={handleChange}\n                            required\n                            />\n                        <Button\n                            color='olive'\n                            fluid size='large'\n                            type=\"submit\"\n                            className=\"btn\"\n                            // disabled={invalidForm}\n                        >\n                            Login\n                        </Button>\n                        <Message>\n                            New to us? <Link to='/signup'>&nbsp;<span className='blue'>Sign Up</span></Link>\n                        </Message>\n                        </Segment>\n                    </Form>\n                </Grid.Column>\n                {error ? <ErrorMessage error={error} /> : null}\n            </Grid>\n      </>\n      );\n}\n\n","import React from 'react';\nimport './PageHeader.css';\nimport { Link } from 'react-router-dom';\nimport { Header, Segment, Icon } from 'semantic-ui-react';\n\n\nexport default function PageHeader({ user, handleLogout }){\n\n\n    return (\n        <Segment clearing className=\"nav-bar\">\n            <Header as='h3' className='logo' floated='left'>\n                <Link to=\"/\" className='logo-text'>\n                    <span className='logo-text'> \n                        <span className='pink'>F</span>\n                        <span className='green'>L</span>\n                        <span className='yellow'>A</span>\n                        <span className='blue'>S</span>\n                        <span className='orange'>H</span>\n                        <span className='pink'>E</span>\n                        <span className='green'>D</span>\n                    </span>\n                </Link>\n            </Header>\n            <Header as='h3' floated='right' className='nav-bar-link'>\n                <Link to='' onClick={handleLogout}><Icon name='log out'></Icon></Link>\n            </Header>\n            <Header as='h3' floated='right' className='nav-bar-link'>\n                <Link to='/new' >CREATE</Link>\n            </Header>               \n            <Header as='h3' floated='right' className='nav-bar-link'>\n                <Link to={`/${user.username}`}>MY FLASHCARDS</Link>          \n            </Header>       \n        </Segment>\n    )\n}","import React from 'react';\nimport './SubjectCard.css';\nimport { Card } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default function SubjectCard({ category }) {\n\n    return (\n        <Link to={`/cards/${category}`}>\n            <Card \n                header={category.toUpperCase()}\n                className='subject-card'\n            />\n        </Link>\n    )\n}","import React from 'react';\nimport SubjectCard from '../../components/SubjectCard/SubjectCard';\nimport { Card } from 'semantic-ui-react';\n\nexport default function SubjectFeed({ cards }) {\n    const categories = [...new Set(cards.map(card => card.category.toLowerCase()))]; \n    return (\n        <Card.Group centered>\n            {categories.map((category, index) => {\n                return (\n                    <SubjectCard \n                        category={category}\n                        key={index}\n                    />\n                )\n            })}\n        </Card.Group>\n\n    )\n}","import React from 'react';\nimport './Introduction.css';\nimport { Header } from 'semantic-ui-react';\n\nexport default function Introduction({ isHomePage }) {\n\n    return (\n        <Header \n            as='h2' \n            color='grey'\n            className='homepage-heading'\n            style={{ maxWidth: 400 }}\n        >\n            {isHomePage ? \n                'Welcome, explore these topics!'\n                :\n                'Create your flashcards...'\n            }\n        </Header>\n    )\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/cards/';\n\nexport function create(card) {\n    console.log(card, 'in create')\n    return fetch(BASE_URL + 'new', {\n        method: 'POST',\n        body: JSON.stringify(card),\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken(),\n            'Content-Type': 'application/json'\n        }\n    }).then(res => res.json());\n}\n\nexport function getAll() {\n    return fetch(BASE_URL, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    })\n    .then(res => res.json());\n}\n\nexport function deleteOne(cardId) {\n    return fetch(BASE_URL + `cards/${cardId}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    })\n    .then(res => res.text())\n    .then(text => console.log(text))\n}\n\nexport function editCard(cardId, card) {\n    return fetch(BASE_URL + `cards/${cardId}`, {\n        method: 'PUT',\n        body: JSON.stringify(card),\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken(),\n            'Content-Type': 'application/json'\n        }\n    }).then(res => res.json())\n}\n\nexport function getCategory(category) {\n    return fetch(BASE_URL + `${category}`, {\n        headers: {\n          'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n      })\n      .then(res => {\n        if(res.ok) return res.json();\n        throw new Error('Bad Credentials')\n      })\n}","import React, { useState, useEffect } from 'react';\nimport './HomePage.css';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport SubjectFeed from '../../components/SubjectFeed/SubjectFeed';\nimport Introduction from '../../components/Introduction/Introduction';\nimport * as cardsAPI from '../../utils/card-api';\nimport { Grid } from 'semantic-ui-react';\n\nexport default function HomePage({ user, handleLogout }){\n    const [cards, setCards] = useState([]);\n\n    async function getCards() {\n        try {\n            const data = await cardsAPI.getAll();\n            setCards([...data.cards])\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    useEffect(() => {\n        getCards();\n    }, []);\n\n    return (\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader user={user} handleLogout={handleLogout} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <Introduction isHomePage={true} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <SubjectFeed cards={cards} />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    )\n}","import React from 'react';\nimport './RemoveCardButton.css';\nimport { Button, Modal, Icon } from 'semantic-ui-react';\n\nexport default function RemoveCardButton({ removeCard, card }) {\n    const [open, setOpen] = React.useState(false);\n\n    function handleDeleteClick() {\n        const cardId = card._id;\n        removeCard(cardId);\n    }\n\n    return (\n        <>\n        <Modal\n            basic\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            size='mini'\n            trigger={<Button className='delete-btn'>Delete</Button>}\n        >\n            <Modal.Content>\n                <p>Are you sure you want to delete this flashcard?</p>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button basic inverted onClick={() => setOpen(false)}>\n                    <Icon name='remove' /> No\n                </Button>\n                <Button color='green' inverted onClick={() => {setOpen(false); handleDeleteClick();}} >\n                    <Icon name='checkmark' /> Yes\n                </Button>\n            </Modal.Actions>\n        </Modal>\n        </>\n    )\n}","import React, { useState } from 'react';\nimport './EditCardButton.css';\nimport { Button, Form, Grid, Segment, Modal, Icon } from 'semantic-ui-react';\n\nexport default function EditCardButton({ card, updateCard }) {\n    const [open, setOpen] = React.useState(false)\n    const [state, setState] = useState({\n        category: card.category,\n        question: card.question,\n        answer: card.answer,\n    });  \n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    function handleSubmit(e){\n        // e.preventDefault()\n        console.log('hitting submit')\n        const cardId = card._id;\n        const formData = new FormData();\n        \n        for (let key in state){\n            formData.append(key, state[key]);\n        }\n        updateCard(cardId, state)\n    } \n\n    return (\n        <>\n        <Modal\n            basic\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            size='mini'\n            trigger={<Button className='edit-btn'>Edit</Button>}\n        >\n            <Modal.Content>\n            <h4>Edit Flashcard</h4>\n                <Grid textAlign='center'  verticalAlign='middle'>\n                    <Grid.Column style={{ maxWidth: 450 }}>\n                        <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <Segment raised>               \n                            <Form.Input                    \n                                name=\"category\"\n                                placeholder=\"category\"\n                                value={state.category}\n                                onChange={handleChange}\n                                required\n                            />\n                            <Form.Input\n                                type=\"question\"                  \n                                name=\"question\"\n                                placeholder=\"question\"\n                                value={state.question}\n                                onChange={handleChange}\n                                required\n                            />\n                            <Form.TextArea             \n                                name=\"answer\"\n                                type=\"answer\"\n                                placeholder=\"answer\"\n                                value={state.answer}\n                                style={{ minHeight: 200 }}\n                                onChange={handleChange}\n                                required\n                            />\n                            </Segment>\n                        </Form>                        \n                    </Grid.Column>\n                </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button basic inverted onClick={() => setOpen(false)}>\n                    <Icon name='remove' /> Cancel\n                </Button>\n                <Button color='green' inverted onClick={() => {setOpen(false); handleSubmit();}}>\n                    <Icon name='checkmark' /> Submit\n                </Button>\n            </Modal.Actions>\n        </Modal>\n        </>\n    )\n}","import React, { useState } from 'react';\nimport './FlashCard.css';\nimport { Card, Button, Divider } from 'semantic-ui-react';\nimport RemoveCardButton from '../RemoveCardButton/RemoveCardButton';\nimport EditCardButton from '../EditCardButton/EditCardButton';\n\n\nexport default function FlashCard({ card, removeCard, updateCard, isProfile }) {\n    const [answer, setAnswer] = useState(false);\n    \n    function handleShowOrHideAnswer() {\n        setAnswer(prevCheck => !prevCheck);\n    }\n\n    return (\n        <Card key={card._id} className='flash-card'>\n            <Card.Content className='card-content'>\n                <Card.Header as='h1'>{card.question}</Card.Header>\n                <Divider></Divider>\n                <Card.Description>\n                    {answer ? card.answer : ''}\n                </Card.Description>\n            </Card.Content>\n            {isProfile ?\n                <Card.Content extra>\n                    <div className='ui three buttons'>\n                        <Button \n                            className='answer-btn'\n                            onClick={() => handleShowOrHideAnswer()}\n                        >\n                        Answer\n                        </Button>\n                        <EditCardButton \n                            updateCard={updateCard}\n                            card={card}\n                        />\n                        <RemoveCardButton \n                            removeCard={removeCard} \n                            card={card} \n                        />\n                    </div>\n                </Card.Content>\n                :            \n                <Card.Content extra className='ui one buttons'>\n                    <Button \n                        className='answer-btn'\n                        onClick={() => handleShowOrHideAnswer()}\n                    >\n                    Answer\n                    </Button>\n                </Card.Content>\n            }\n        </Card>\n    )\n}","import React from 'react';\nimport './ShuffleButton.css';\nimport { Button, Grid, Icon } from 'semantic-ui-react';\n\n\nexport default function ShuffleButton({ shuffleCards, cards }) {\n    \n\n    function handleShuffleClick() {\n        console.log('hitting the shuffle')\n        for (let i = cards.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [cards[i], cards[j]] = [cards[j], cards[i]];\n        }\n        shuffleCards(cards);\n    }\n\n    return (\n        <Grid >\n            <Button \n                icon\n                circular\n                floated='right'\n                className='shuffle-btn'\n                onClick={() => handleShuffleClick()}\n            >\n                <Icon name='shuffle' />\n            </Button>\n        </Grid>\n    )\n} ","import React, { useState } from 'react';\nimport './Carousel.css';\nimport ShuffleButton from '../../components/ShuffleButton/ShuffleButton';\nimport { useSwipeable } from 'react-swipeable';\n\nexport const CarouselItem = ({children, width}) => {\n    return (\n        <div className='carousel-item' style={{ width: width }}>\n            {children}\n        </div>\n    )\n}\n\nexport default function Carousel({ children, removeCard, updateCard, shuffleCards, cards }) {\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const updateIndex = (newIndex) => {\n        if (newIndex < 0) {\n            newIndex = React.Children.count(children) - 1;\n        } else if (newIndex >= React.Children.count(children)) {\n            newIndex = 0;\n        }\n\n        setActiveIndex(newIndex);\n    }\n\n    const handlers = useSwipeable({\n        onSwipedLeft: () => updateIndex(activeIndex + 1),\n        onSwipedRight: () => updateIndex(activeIndex - 1)\n    });\n    \n    return (\n        <div {...handlers} className='carousel'>\n            <div className='inner' style={{ transform: `translateX(-${activeIndex * 100}%)` }}>\n                {React.Children.map(children, (child, index) => {\n                    return React.cloneElement(child, { width: '100%' });\n                })}\n            </div>\n            <div className='indicators'>\n                <button\n                    onClick={() => {\n                        updateIndex(activeIndex - 1);\n                    }}\n                    className='chevron-left'\n                >\n                </button>\n                <button\n                    onClick={() => {\n                        updateIndex(activeIndex + 1);\n                    }}\n                    className='chevron-right'\n                >\n                </button>\n                <ShuffleButton shuffleCards={shuffleCards} cards={cards} />\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport userService from '../../utils/userService';\nimport * as cardsAPI from '../../utils/card-api';\nimport { Grid, Loader } from 'semantic-ui-react'\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport FlashCard from '../../components/FlashCard/FlashCard';\nimport Carousel, { CarouselItem } from '../../components/Carousel/Carousel';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ProfilePage({ user, handleSignUpOrLogin, handleLogout }) {\n    const [profileUser, setProfileUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [card, setCard] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const location = useLocation();\n\n    async function getProfile(){\n        try {\n            const username = location.pathname.substring(1);\n            const data = await userService.getProfile(username);\n            setLoading(() => false);\n            setProfileUser(() => data.user);\n        } catch(err) {\n            setError(err);\n        }\n    }\n\n    async function getCards() {\n        try {\n            const data = await cardsAPI.getAll();\n            setCards([...data.cards])\n        } catch(err) {\n            console.log(err)\n        }\n    }\n    \n    async function removeCard(cardId) {\n        try {\n            const data = await cardsAPI.deleteOne(cardId);\n            getCards();\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    async function updateCard(cardId, card) {\n        try {\n            const data = await cardsAPI.editCard(cardId, card);\n            setCard(data.card)\n            getCards();\n        } catch(err) {\n            console.log(err)\n        }\n    }\n    \n    async function shuffleCards(cards) {\n        try {\n            setCards([...cards]);\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    useEffect(() => {\n        getProfile();\n        getCards();\n    }, [user, location.pathname])\n    \n    return (\n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >                \n                    <Grid.Column style={{ maxWidth: 450}}>                            \n                        <Loader size='large' active>Loading</Loader>                         \n                    </Grid.Column>                 \n                </Grid>\n                :\n                <Grid centered>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <PageHeader profileUser={profileUser} user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Carousel \n                                cards={cards} \n                                removeCard={removeCard}\n                                updateCard={updateCard}\n                                isProfile={true}\n                                shuffleCards={shuffleCards}\n                            >\n                                {cards.map((card, index) => {\n                                    return (\n                                        <CarouselItem \n                                            key={index} \n                                            removeCard={removeCard}\n                                            updateCard={updateCard}\n                                            isProfile={true}\n                                        >\n                                            <FlashCard \n                                                card={card}\n                                                key={card._id}\n                                                removeCard={removeCard}\n                                                updateCard={updateCard}\n                                                isProfile={true}\n                                            />\n                                        </CarouselItem>\n                                    )\n                                })}\n                            </Carousel>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}","import React, { useState } from 'react';\nimport './AddCardForm.css';\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react';\n\nexport default function AddCardForm({ handleAddCard }) {\n    const [state, setState] = useState({\n        category: '',\n        question: '',\n        answer: ''\n    });\n\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        handleAddCard(state);\n        setState({\n            category: '',\n            question: '',\n            answer: ''\n        })\n    }\n\n    return (\n        <Grid textAlign='center'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment>           \n                <Form  autoComplete=\"off\" onSubmit={handleSubmit}>              \n                <Form.Input\n                    className=\"form-control\"\n                    name=\"category\"\n                    value={state.category}\n                    placeholder=\"category\"\n                    onChange={handleChange}\n                    required\n                />  \n                <Form.Input\n                    className=\"form-control\"\n                    name=\"question\"\n                    value={state.question}\n                    placeholder=\"question\"\n                    onChange={handleChange}\n                    required\n                />\n                <Form.TextArea             \n                    name=\"answer\"\n                    placeholder=\"answer\"\n                    value={state.answer}\n                    style={{ minHeight: 100 }}\n                    onChange={handleChange}\n                />\n                <Button\n                    type=\"submit\"\n                    className=\"btn\"\n                >\n                    ADD CARD\n                </Button>\n                </Form>\n            </Segment>\n        </Grid.Column>\n    </Grid>\n    )\n}","import React from 'react';\nimport './FormPage.css';\nimport { Grid } from 'semantic-ui-react';\nimport AddCardForm from '../../components/AddCardForm/AddCardForm';\nimport Introduction from '../../components/Introduction/Introduction';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport * as cardsAPI from '../../utils/card-api';\n\nexport default function FormPage({ profileUser, user, handleLogout }) {   \n    async function handleAddCard(card) {\n        try {\n            await cardsAPI.create(card);\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader profileUser={profileUser} user={user} handleLogout={handleLogout}/>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <Introduction isHomePage={false} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 450}}>\n                    <AddCardForm handleAddCard={handleAddCard} />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport './CardPage.css';\nimport * as cardsAPI from '../../utils/card-api';\nimport { Grid, Loader } from 'semantic-ui-react'\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport FlashCard from '../../components/FlashCard/FlashCard';\nimport Carousel, { CarouselItem } from '../../components/Carousel/Carousel';\nimport { useLocation } from 'react-router-dom';\n\nexport default function CardPage({ user, handleLogout }) {\n    const [cards, setCards] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const location = useLocation();\n\n    async function getCardCategory() {\n        try {\n            const category = location.pathname.substring(1);\n            const data = await cardsAPI.getCategory(category);\n            setCards(data.cards);\n            setLoading(false);\n\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    async function shuffleCards(cards) {\n        try {\n            setCards([...cards]);\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    useEffect(() => {\n        getCardCategory();\n    }, []);\n\n    return ( \n        <>\n            { loading ?\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle' >                \n                    <Grid.Column style={{ maxWidth: 450}}>                            \n                        <Loader size='large' active>Loading</Loader>                         \n                    </Grid.Column>                 \n                </Grid>\n                :\n                <Grid centered>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <PageHeader user={user} handleLogout={handleLogout}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Carousel \n                                cards={cards}\n                                isProfile={false} \n                                shuffleCards={shuffleCards}\n                            >\n                                {cards.map((card, index) => {\n                                    return (\n                                        <CarouselItem \n                                            key={index}\n                                            isProfile={false} \n                                        >\n                                            <FlashCard \n                                                card={card}\n                                                key={card._id}\n                                                isProfile={false}\n                                            />\n                                        </CarouselItem>\n                                    )\n                                })}\n                            </Carousel>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            }\n        </>\n    )\n}","import React, {useState} from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport HomePage from '../HomePage/HomePage';\nimport ProfilePage from '../ProfilePage/ProfilePage';\nimport FormPage from '../FormPage/FormPage';\nimport CardPage from '../CardPage/CardPage';\nimport userService from '../../utils/userService'\n\n\nfunction App() {\n\n  const [user, setUser] = useState(userService.getUser()) // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null})\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/new\">\n             <FormPage user={user} handleLogout={handleLogout}/>\n          </Route>\n          {userService.getUser() ? \n            <> \n             <Switch>\n                <Route exact path=\"/\">\n                    <HomePage user={user} handleLogout={handleLogout}/>\n                </Route>\n                <Route exact path=\"/:username\">\n                    <ProfilePage user={user} handleLogout={handleLogout} handleSignUpOrLogin={handleSignUpOrLogin}/>\n                </Route>\n                <Route exact path=\"/cards/:category\">\n                    <CardPage user={user} handleLogout={handleLogout}/>\n                </Route>\n            </Switch>\n            </>\n            :\n            <Redirect to='/login'/>\n          }\n  \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}